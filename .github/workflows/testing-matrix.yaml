name: Testing Matrix

on:
  workflow_dispatch:
  push:
    branches: [main]
  pull_request:
    branches: [main]

concurrency:
  group: ${{ github.workflow }}-${{ github.event.pull_request.number || github.ref }}
  cancel-in-progress: true

env:
  TESTS: "PublishTests/testResolveSid PublishTests/testPublishMicrophone PublishTests/testPublishData"

jobs:
  run:
    strategy:
      fail-fast: false
      matrix:
        include:
          # https://github.com/actions/runner-images/blob/main/images/macos/macos-13-Readme.md
          - os: macos-13
            xcode: 14.2
            platform: "iOS Simulator,OS=17.2,name=iPhone 14 Pro"
          - os: macos-13
            xcode: 14.2
            platform: "macOS"
          - os: macos-13
            xcode: 14.2
            platform: "macOS,variant=Mac Catalyst"
          # https://github.com/actions/runner-images/blob/main/images/macos/macos-14-Readme.md
          - os: macos-14
            xcode: 15.4
            platform: "iOS Simulator,OS=17.5,name=iPhone 15 Pro"
          - os: macos-14
            xcode: 15.4
            platform: "macOS"
          - os: macos-14
            xcode: 15.4
            platform: "macOS,variant=Mac Catalyst"
          # https://github.com/actions/runner-images/blob/main/images/macos/macos-14-Readme.md
          # - os: macos-14
          #   xcode: 16.0-beta
          #   platform: "iOS Simulator,OS=18.0,name=iPhone 15 Pro"
          # - os: macos-14
          #   xcode: 16.0-beta
          #   platform: "macOS"
          # - os: macos-14
          #   xcode: 16.0-beta
          #   platform: "macOS,variant=Mac Catalyst"

    runs-on: ${{ matrix.os }}
    timeout-minutes: 30

    steps:
      - uses: actions/checkout@v4

      - name: Install LiveKit Server
        run: brew install livekit

      - name: Run LiveKit Server
        run: livekit-server --dev &

      - uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: ${{ matrix.xcode }}

      - name: Xcode Version
        run: xcodebuild -version

      - name: Build
        run: xcodebuild build-for-testing -scheme LiveKit -destination 'platform=${{ matrix.platform }}' -parallel-testing-enabled YES

      # https://github.com/actions/runner-images/issues/9330
      - name: Allow microphone access to all apps
        run: sqlite3 $HOME/Library/Application\ Support/com.apple.TCC/TCC.db "INSERT OR IGNORE INTO access VALUES ('kTCCServiceMicrophone','/usr/local/opt/runner/provisioner/provisioner',1,2,4,1,NULL,NULL,0,'UNUSED',NULL,0,1687786159,NULL,NULL,'UNUSED',1687786159);"

      - name: Run
        run: |
          IFS=' ' read -r -a tests <<< "${{ env.TESTS }}"
          for test in "${tests[@]}"; do
            echo "::group::Running test $test"
            xcodebuild test-without-building -scheme LiveKit -destination 'platform=${{ matrix.platform }}' -only-testing:LiveKitTests/$test
            echo "::endgroup::"
          done
        shell: bash
